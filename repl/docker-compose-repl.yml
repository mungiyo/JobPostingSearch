version: "3"

services: 
  postgres:
    container_name: postgres
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
        - POSTGRES_USER=${AIRFLOW}
        - POSTGRES_PASSWORD=${AIRFLOW}
        - POSTGRES_DB=${AIRFLOW}
    logging:
        options:
            max-size: 10m
            max-file: "3"  

  elasticsearch:
    container_name: elasticsearch
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.14
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - discovery.type=single-node
    healthcheck:
      test: "wget -q -O - http://localhost:9200/_cat/health"
      interval: 5s
      timeout: 30s
      retries: 300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - monstache-network

  monstache:
    container_name: monstache
    restart: always
    image: rwynn/monstache:rel5
    command: -f /monstache.config.toml &
    volumes:
      - ./monstache/monstache.config.toml:/monstache.config.toml
    depends_on:
      - elasticsearch
      - mongo1
      - mongo2
      - mongo3
    links:
      - elasticsearch
    ports:
      - "8080:8080"
    networks:
      - monstache-network

  mongo1:
    container_name: mongo1
    image: "mongo"
    ports:
      - "27020:27017"
    volumes:
      - mongo1:/data/db
    networks:
      - monstache-network
    command: mongod --replSet replication

  mongo2:
    container_name: mongo2
    image: "mongo"
    ports:
      - "27021:27017"
    volumes:
      - mongo2:/data/db
    networks:
      - monstache-network
    command: mongod --replSet replication
    depends_on:
      - mongo1

  mongo3:
    container_name: mongo3
    image: "mongo"
    ports:
      - "27022:27017"
    volumes:
      - mongo3:/data/db
    networks:
      - monstache-network
    command: mongod --replSet replication
    depends_on:
      - mongo2

  mongo-init:
    container_name: mongo_init
    build: 
      context: ./mongo_init
    depends_on:
      - mongo1
    networks:
      - monstache-network

volumes:
  mongo1:
  mongo2:
  mongo3:

  # airflow:
  #   container_name: airflow
  #   build: ./airflow
  #   restart: unless-stopped
  #   logging:
  #       options:
  #           max-size: 10m
  #           max-file: "3"
  #   command: ["webserver"]
  #   ports:
  #       - 8080:8080
  #   volumes:
  #       - ./airflow/dags:/usr/local/airflow/dags
  #       - ./airflow/modules:/usr/local/airflow/modules
  #   healthcheck:
  #       test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
  #       interval: 30s
  #       timeout: 30s
  #       retries: 3
  #   depends_on:
  #       - postgres